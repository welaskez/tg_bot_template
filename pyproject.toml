[project]
name = "tg-bot-template"
version = "0.1.0"
description = "Telegram Bot Template"
requires-python = ">=3.13"
dependencies = [
    "aiogram>=3.20.0.post0",
    "alembic>=1.16.1",
    "apscheduler>=3.11.0",
    "asyncpg>=0.30.0",
    "dishka>=1.6.0",
    "pydantic-settings>=2.9.1",
    "redis>=6.2.0",
    "sqlalchemy[asyncio]>=2.0.41",
]


[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.16.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.11.13",
]


[tool.black]
line-length = 110


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".*_factory.py",
]

# Same as Black.
line-length = 110

# Assume Python 3.13
target-version = "py313"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.

select = [
    "F", # Pyflakes
    "E", # Error
    "E4", # Error
    "E9", # Error
    "I", # isort
    "BLE", # flake8-blind-except
    "YTT", # flake8-2020
    "ASYNC", # flake8-async
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"


[tool.mypy]
plugins = ["pydantic.mypy"]
warn_redundant_casts = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
ignore_missing_imports = true
show_error_codes = true
scripts_are_modules = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true


[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
pythonpath = "bot"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
asyncio_default_test_loop_scope = "session"
